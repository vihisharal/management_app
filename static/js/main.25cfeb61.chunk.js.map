{"version":3,"sources":["Context.js","components/patients/Patient.js","components/patients/Patients.js","components/layouts/TextInputGroup.js","components/patients/AddPatient.js","components/patients/EditPatient.js","components/pages/About.js","components/Auth/Auth.js","components/Auth/Login.js","components/layouts/Header.js","components/pages/NotFound.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","patients","filter","patient","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","_componentDidMount","inherits","createClass","key","value","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Patient","showPatientInfo","onDeleteClick","delete","t0","_this2","_this$props$patient","name","serialNumber","mobileNumber","className","onClick","style","cursor","float","color","bind","Link","to","Patients","Fragment","patients_Patient","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddPatient","errors","e","defineProperty","target","onSubmit","_this$state","newPatient","preventDefault","abrupt","test","post","history","push","_this$state2","layouts_TextInputGroup","EditPatient","updatePatient","match","params","put","About","users","passwords","auth","isValid","user","pass","find","cur","index","console","log","Login","email","password","required","Header","hospitalName","href","NotFound","Test","title","body","fetch","then","response","json","App","Context_Provider","HashRouter","layouts_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25cfeb61.chunk.js","sourcesContent":["import React, { Component } from 'react';\n//import uniqeID  from 'uniqid';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer=(state,action)=>{\n  switch(action.type){\n    case 'DELETE_PATIENT':\n      return{\n        ...state,\n        patients:state.patients.filter(patient=> patient.id!==action.payload)\n      };\n      case 'ADD_PATIENT':\n      return{\n        ...state,\n        patients:[action.payload,...state.patients]\n      };\n      case 'UPDATE_PATIENT':\n      return{\n        ...state,\n        patients:state.patients.map(patient=> patient.id===action.payload.id ? (patient=action.payload):patient)\n      };\n      default :\n      return state;\n  }\n}\n\nexport class Provider extends Component{\n\n  state={\n    patients:[\n     /* {\n       id:uniqeID(),\n       name:\"abc\",\n       serialNumber:\"abs123\",\n       mobileNumber:\"123-345-4567\"\n      },\n      {\n        id:uniqeID(),\n        name:\"pqr\",\n        serialNumber:\"pqr123\",\n        mobileNumber:\"234-445-3433\"\n       },\n       {\n        id:uniqeID(),\n        name:\"xyz\",\n        serialNumber:\"xyz123\",\n        mobileNumber:\"898-121-6463\"\n       } */       \n    ],\n    dispatch:action => this.setState(state => reducer(state,action))\n    \n  }\n\n  async componentDidMount(){\n    //const res= await axios.get('https://jsonplaceholder.typicode.com/users');\n    const res= await axios.get('http://localhost:3004/patients');\n    this.setState({patients:res.data});\n  }  \n\n  render(){\n      return(\n        <Context.Provider value={this.state}>\n          {this.props.children}\n        </Context.Provider>\n      );\n  }\n}\n\nexport const Consumer =Context.Consumer;","import React, { Component } from 'react';\nimport PropType from 'prop-types';\nimport {Consumer} from '../../Context';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Patient extends Component {\n  state={\n    showPatientInfo:false\n  };\n  onDeleteClick=async (id,dispatch)=>{\n    try {\n      //await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      await axios.delete(`http://localhost:3004/patients/${id}`);\n      dispatch({type:'DELETE_PATIENT',payload:id});        \n    } catch (error) {\n      dispatch({type:'DELETE_PATIENT',payload:id});  \n    }\n  }\n  render() {\n    const {name,serialNumber,mobileNumber,id}=this.props.patient;\n    const {showPatientInfo} = this.state;\n    return (\n      <Consumer>\n        {value=>{\n          const {dispatch} =value;\n          return(\n            <div className=\"card card-body mb-3\">\n            <h4>{name}{' '} \n              <i  \n                onClick={()=>this.setState({showPatientInfo:!this.state.showPatientInfo}) } \n                className=\"fa fa-sort-down ml-4\"\n                style={{cursor:'pointer'}}\n              />\n              <i\n                className=\"fa fa-times\"\n                style={{cursor:'pointer',float:'right',color:'red'}}\n                onClick={this.onDeleteClick.bind(this,id,dispatch)} \n              />\n              <Link to={`patient/edit/${id}`}>\n                <i \n                  className=\"fa fa-pencil mr-4\"\n                  style={{\n                    cursor:'pointer',\n                    float:'right',\n                    color:'black'\n                  }}\n                />\n              </Link>\n            </h4>\n            {showPatientInfo? \n              (<ul className=\"list-group\">\n                <li className=\"list-group-item\">Serial : {serialNumber}</li>\n                <li className=\"list-group-item\">Mobile : {mobileNumber}</li>\n              </ul>)\n              :null}\n          </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nPatient.propTypes={\n  patient: PropType.object.isRequired\n}\n\n\nexport default Patient; ","import React, { Component } from 'react'\n\nimport Patient from './Patient';\nimport {Consumer} from '../../Context';\n\nclass Patients extends Component {\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const {patients} =value;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-success\">Patients </span> List\n              </h1>\n              {patients.map(patient =>(\n                <Patient \n                  key={patient.id}\n                  patient={patient}\n                />\n              ))}\n            </React.Fragment>            \n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\n\nexport default Patients;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  type,\n  value,\n  placeholder,\n  onChange,\n  error\n})=>{\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input \n        type={type} \n        name={name} \n        className={classnames(\"form-control form-control-lg\",{\n          'is-invalid':error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n      \n    </div>\n  )\n}\nTextInputGroup.propTypes={\n  name:PropTypes.string.isRequired,\n  label:PropTypes.string.isRequired,\n  type:PropTypes.string.isRequired,\n  placeholder:PropTypes.string.isRequired,\n  value:PropTypes.string.isRequired,\n  onChange:PropTypes.func.isRequired,\n  error:PropTypes.string.isRequired\n}\n\nTextInputGroup.defaultProps={\n  type:'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport {Consumer} from '../../Context';\nimport TextInputGroup from '../layouts/TextInputGroup'; //default case don't use curly brackets\nimport axios from 'axios';\n//import uniqeID  from 'uniqid';\n\nclass AddPatient extends Component {\n  state={\n       /* id:uniqeID(), */\n       name:\"\",\n       serialNumber:\"\",\n       mobileNumber:\"\",\n       errors:{}\n       \n  }\n\n  onChange = e => this.setState({[e.target.name]:e.target.value});\n  \n  onSubmit = async (dispatch,e) => {\n    e.preventDefault();\n    const{name,serialNumber,mobileNumber}=this.state;\n\n     //error checking\n     if(name===''){\n      this.setState({\n        errors:{name:'Name is required.'}\n      }); return;\n     }\n     if(serialNumber===''){\n      this.setState({\n        errors:{serialNumber:'Serial number is required.'}\n      }); return;\n     }\n     if(!(/^[1-9]{1}[0-9]{9}$/.test(mobileNumber)) && mobileNumber.length!==10){\n      this.setState({\n        errors:{mobileNumber:'Mobile number is required.'}\n      }); return;\n     }           \n\n    const newPatient={\n      /* id:uniqeID(), */\n      name,\n      serialNumber,\n      mobileNumber\n    };\n\n    //const res=await axios.post('https://jsonplaceholder.typicode.com/users',newPatient);\n    const res=await axios.post('http://localhost:3004/patients',newPatient);\n    dispatch({ type:\"ADD_PATIENT\", payload:res.data });\n    //clear state\n    this.setState({\n      name:\"\",\n      serialNumber:\"\",\n      mobileNumber:\"\",\n      errors:{}\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {name,serialNumber,mobileNumber,errors} =this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const {dispatch}=value;\n          return(\n            <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Patient</div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                <TextInputGroup \n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name...\"\n                  value={name}\n                  onChange={this.onChange} \n                  error={errors.name}\n                  \n                /> \n                \n                <TextInputGroup \n                  label=\"Serial Number\"\n                  name=\"serialNumber\"\n                  placeholder=\"Enter Serial Number...\"\n                  value={serialNumber}\n                  onChange={this.onChange}\n                  error={errors.serialNumber}\n                /> \n                <TextInputGroup \n                  label=\"Mobile Number\"\n                  name=\"mobileNumber\"\n                  placeholder=\"Enter Mobile Number...\"\n                  value={mobileNumber}\n                  onChange={this.onChange}\n                  error={errors.mobileNumber}\n                />\n                <input type=\"submit\" value=\"Add Patient\" className=\"btn btn-light btn-block\" />                       \n              </form>\n            </div>\n          </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\nexport default AddPatient;","import React, { Component } from 'react';\nimport {Consumer} from '../../Context';\nimport TextInputGroup from '../layouts/TextInputGroup'; //default case don't use curly brackets\nimport axios from 'axios';\n//import uniqeID  from 'uniqid';\n\nclass EditPatient extends Component {\n  state={\n       /* id:uniqeID(), */\n       name:\"\",\n       serialNumber:\"\",\n       mobileNumber:\"\",\n       errors:{}\n       \n  }\n\n  async componentDidMount(){\n    const {id} = this.props.match.params;\n    //const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const res= await axios.get(`http://localhost:3004/patients/${id}`);\n    const patient=res.data;\n    this.setState({\n      name:patient.name,\n      serialNumber:patient.serialNumber,\n      mobileNumber:patient.mobileNumber\n    })\n  }\n\n  onChange = e => this.setState({[e.target.name]:e.target.value});\n  \n  onSubmit = async (dispatch,e) => {\n    e.preventDefault();\n    const{name,serialNumber,mobileNumber}=this.state;\n\n     //error checking\n     if(name===''){\n      this.setState({\n        errors:{name:'Name is required.'}\n      }); return;\n     }\n     if(serialNumber===''){\n      this.setState({\n        errors:{serialNumber:'Serial number is required.'}\n      }); return;\n     }\n     if(!(/^[1-9]{1}[0-9]{9}$/.test(mobileNumber)) && mobileNumber.length!==10){\n      this.setState({\n        errors:{mobileNumber:'Mobile number is required.'}\n      }); return;\n     }           \n\n    const updatePatient={\n      name,\n      serialNumber,\n      mobileNumber\n    } \n    const {id} = this.props.match.params;\n    //const res  = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updatePatient);\n    const res  = await axios.put(`http://localhost:3004/patients/${id}`,updatePatient);\n    \n    dispatch({\n      type:'UPDATE_PATIENT',\n      payload:res.data\n    })\n\n\n    //clear state\n    this.setState({\n      name:\"\",\n      serialNumber:\"\",\n      mobileNumber:\"\",\n      errors:{}\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {name,serialNumber,mobileNumber,errors} =this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const {dispatch}=value;\n          return(\n            <div className=\"card mb-3\">\n            <div className=\"card-header\">Edit Patient</div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                <TextInputGroup \n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name...\"\n                  value={name}\n                  onChange={this.onChange} \n                  error={errors.name}\n                  \n                /> \n                \n                <TextInputGroup \n                  label=\"Serial Number\"\n                  name=\"serialNumber\"\n                  placeholder=\"Enter Serial Number...\"\n                  value={serialNumber}\n                  onChange={this.onChange}\n                  error={errors.serialNumber}\n                /> \n                <TextInputGroup \n                  label=\"Mobile Number\"\n                  name=\"mobileNumber\"\n                  placeholder=\"Enter Mobile Number...\"\n                  value={mobileNumber}\n                  onChange={this.onChange}\n                  error={errors.mobileNumber}\n                />\n                <input type=\"submit\" value=\"Update Patient\" className=\"btn btn-light btn-block\" />                       \n              </form>\n            </div>\n          </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\nexport default EditPatient;","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Patients Manager</h1>\n      <p className=\"lead\">Simple app to manage patients</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","\nconst state ={\n  users :['vishal@mail.com','rahul@mail.com','vishal','rahul'],\n  passwords:['pass','pass','code','code'],\n  auth:false\n}\n\nconst isValid= (user,pass) => {\n  const {users,passwords} = state;\n  // eslint-disable-next-line\n  const res= users.find(function(cur,index){\n    if(cur===user && passwords[index]===pass){\n      return true;\n    }\n  });\n  console.log(state);\n  res? state['auth']=true : state['auth']=false;\n  console.log(state);\n  return (res? true : false);\n}\nconst isAuth= () => {\n  return state.auth? true : false;\n}\n\nexport {isAuth}\nexport default isValid; ","import React, { Component } from 'react';\nimport isValid from './Auth';\n\nclass Login extends Component {\n  state ={\n    email:'',\n    password:''    \n  }\n  onChange = e => this.setState({[e.target.name]:e.target.value});\n  \n  onSubmit = async (e) => {\n    e.preventDefault();\n    const{email,password}=this.state;\n\n    //hard coded email,password for login\n    if(isValid(email,password)){\n      console.log('correct');\n      this.props.history.push('/');  \n    }\n    else{  return;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h1 className=\"text-center pb-4 pt-3\">\n                <span className=\"text-success\">\n                  <i className=\"fa fa-lock mr-4\"></i>\n                  Login\n                </span>\n              </h1>\n              <form onSubmit={this.onSubmit.bind(this)} >\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input \n                    type=\"email\" \n                    className=\"form-control\" \n                    name=\"email\" \n                    required \n                    value={this.state.email}\n                    onChange={this.onChange}\n                   />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input \n                    type=\"password\" \n                    className=\"form-control\" \n                    name=\"password\" \n                    required \n                    value={this.state.password}\n                    onChange={this.onChange}\n                   />\n                </div>\n                <input type=\"submit\" className=\"btn btn-light btn-block\" value=\"Submit\" />                \n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Login;","import React from 'react';\nimport PropType from 'prop-types';\nimport {Link} from 'react-router-dom';\nconst Header =(props) => {\n  const {hospitalName} = props;\n  return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n          {hospitalName}\n          </a>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link\" href=\"/\">User</a> */}\n                <Link className=\"nav-link\" to=\"/\"><i className=\"fa fa-home\"></i>User</Link>\n              </li>\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link\" href=\"/patient/add\">Add Patient</a> */}\n                <Link className=\"nav-link\" to=\"/patient/add\"><i className=\"fa fa-plus\"></i>Add Patient</Link>\n              </li>\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link\" href=\"/about\">About</a> */}\n                <Link className=\"nav-link\" to=\"/about\"><i className=\"fa fa-question\"></i>About</Link>\n              </li>                            \n            </ul>\n          </div>\n        </div>\n      </nav>\n  )\n}\n\nHeader.defaultProps={\n  hospitalName :\"Jankalyan Seva\"\n}\n\nHeader.propTypes={\n  hospitalName: PropType.string.isRequired\n}\n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exit</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n  state ={\n    title:'',\n    body:''\n  };\n\n  componentDidMount(){\n    console.log('componentDidMount...');\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n    .then(response => response.json())\n    .then(data => this.setState({\n      title:data.title,\n      body:data.body\n    }))\n    .then(()=>{console.log(this.state); return false;});\n    \n\n  }\n/*   componentWillMount(){\n    console.log('componentWillMount...');\n  }\n  componentDidUpdate(){\n    console.log('componentDidUpdate...');\n  }\n  componentWillUpdate(){\n    console.log('componentWillUpdate...');\n  }\n  componentWillReceiveProps(nextProps,nextState){\n    console.log('componentWillReceiveProps...');\n  }    \n  getDerivedStateFromProps(nextProps,nextState){\n    return {\n      test: \"somthing\"\n    }\n  }\n  getSnapshotBeforeUpdate(nextProps,nextState){\n    console.log('getSnapshotBeforeUpdate...');\n  } */\n\n  render() {\n    const {title,body} = this.state;\n    return (\n      <div>\n        <h1>Test Component</h1>\n        <h2>{title}</h2>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as BRouter, Route ,Switch } from 'react-router-dom';\nimport Patients from './components/patients/Patients';\nimport AddPatient from './components/patients/AddPatient';\nimport EditPatient from './components/patients/EditPatient';\nimport About from './components/pages/About';\nimport Login from './components/Auth/Login';\nimport Header from './components/layouts/Header';\nimport NotFound from './components/pages/NotFound'; \nimport { Provider } from './Context';\nimport Test from './components/Test/Test';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <BRouter>\n          <div className=\"App\">\n            <Header hospitalName=\"Jivan Seva\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path =\"/\" component={Patients} />\n                <Route exact path =\"/patient/add\" component={AddPatient} />\n                <Route exact path =\"/patient/edit/:id\" component={EditPatient} />\n                <Route exact path =\"/about\" component={About} />\n                <Route exact path =\"/login\" component={Login} />\n                <Route exact path =\"/test\" component={Test} />\n                <Route  component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </BRouter>\n      </Provider>\n    );\n  }\n}\n//patients, displaying just serial number, name and mobile number\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}